
<?xml version="1.0" encoding="utf-8"?>
<!--
* FinTP - Financial Transactions Processing Application
* Copyright (C) 2013 Business Information Systems (Allevo) S.R.L.
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>
* or contact Allevo at : 031281 Bucuresti, 23C Calea Vitan, Romania,
* phone +40212554577, office@allevo.ro <mailto:office@allevo.ro>, www.allevo.ro.
-->
<configuration>
	
	<configSections>
		<section name="Fetcher" type="MQ" on="true"/><!-- type = "MQ | TEMPLATE | BASE64 |..."-->
		<section name="Publisher" type="MQ" on="true"/>
		<section name="Filter_I1" chain="Fetcher" type="TEMPLATE" order="0" Template="SWIFT.template.xml"  /> 
		<section name="Filter_I2" chain="Fetcher" type="BASE64" order="1" 
			XPATH="/root/Transformed/SWIFTFORMAT" KeepOriginal="yes"/> 
		<section name="Filter_I3" chain="Fetcher" type="XSLT" order="2" XSLTFILE="SWIFT2QPI.xslt" />
		<section name="Filter_I4" chain="Fetcher" type="MQ" order="3" 
			MQQueue="qPI.FromConnectors" MQQMgr="qPIQM.MainHub"
			MQURI="qPI.FromConnectors/TCP/193.1.1.77(1414)" />
    <!--  MQ filter settings
          type = "MQ" 
          MQQueue = "mandatory for every queue manager type"
          MQQMgr = "optional for AMQ "
          MQURI = "channel_definition_for_WMQ | uri_manager_for_AMQ"
          MQManagerType = "AMQ | WMQ"
    -->
    <section name="Filter_O1" chain="Publisher" type="MQ" MQManagerType = "WMQ"order="0" 
			MQQueue="qPBOSEPA.ToConnector" MQQMgr="qPIQM.MainHub"
			MQURI="qPI.FromConnectors/TCP/193.1.1.77(1414)" /> 
	</configSections>
	
	
			
	<appSettings>	
		<add key="ServiceName" value="BOSEPAOut" />
		
		<add key="AppToMQ.Type" value="WMQ" /> <!--"WMQ | AMQ"-->
		<add key="AppToMQ.MQURI" value="qPI.FromConnectors/TCP/193.1.1.77(1414)"/><!--channnel_definition | uri_server" -->
		<add key="AppToMQSeries.AppQueue" value="BOSAAtoQPAY"/>
		<add key="AppToMQSeries.BackupQueue" value="BOSAAtoQPAY.bck" />
		<add key="AppToMQSeries.QueueManager" value="qPIQM.MainHub"/>
		<add key="AppToMQSeries.StrictSWIFTFormat" value="SAA_FIN" />

		
		<add key="MQToApp.Type" value="WMQ" /><!--"WMQ | AMQ"-->
		<add key="MQToApp.MQURI" value="qPI.FromConnectors/TCP/193.1.1.77(1414)"/><!--channnel_definition | uri_server" -->
		<add key="MQSeriesToApp.WatchQueue" value="qPBOSEPA.ToConnector"/>
		<add key="MQSeriesToApp.AppQueue" value="QPAYtoBOSAA"/>
		<add key="MQSeriesToApp.QueueManager" value="qPIQM.MainHub"/>
		<add key="MQSeriesToApp.StrictSWIFTFormat" value="SAA_FIN" />

				                                              	   

		


		<add key="EventsThreaded" value="true" />
		<add key="Log.PublisherMQ.Type" value="WMQ" /><!--"WMQ | AMQ"-->
		<add key="Log.PublisherMQ.URI" value="qPI.FromConnectors/TCP/193.1.1.77(1414)" />
		<add key="Log.PublisherToMQ" value="true" />				
		<add key="Log.PublisherMQ.QM" value="qPIQM.MainHub" />
		<add key="Log.PublisherMQ.Q" value="qPI.Events" />	
		<add key="LogPrefix" value="../logs/BOSEPAConnector" />	
		
	</appSettings>
</configuration>
